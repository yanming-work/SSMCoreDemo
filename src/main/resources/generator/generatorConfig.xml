<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--  必须配置驱动包的路径 ,数据库驱动:选择你的本地硬盘上面的数据库驱动包-->
    <classPathEntry  location="D:\Maven\maven_repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar"/>
    <context id="DB2Tables"  targetRuntime="MyBatis3">
     <!-- 生成的model，将implements Serializable -->  
        
        
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        
        <!-- 默认 <commentGenerator>，需要注释<commentGenerator type="org.mybatis.generator.MyCommentGenerator"> 添加jar --> 
           <commentGenerator type="org.mybatis.generator.MyCommentGenerator">
        <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
            
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
     -->
    <property name="autoDelimitKeywords" value="false"/>


   <!-- 生成的Java文件的编码-->
    <property name="javaFileEncoding" value="UTF-8"/>


   <!-- 格式化java代码-->
    <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>


   <!-- 格式化XML代码-->
    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
            <property name="suppressDate" value="true"/>
            
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://127.0.0.1/db_test" userId="root" password="123456">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL   
                和 NUMERIC 类型解析为java.math.BigDecimal -->  
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.spring.boot.test.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="mapping" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.spring.boot.test.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 自定义添加-->
  
        
        
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名:
        useActualColumnNames
        	假设表有一个字段名为start_date,
        	如果这个属性设置为true,则生成的实体类的属性名为start_date,
        	生成的setter/getter为setStart_date/getStart_date。
        	如果useActualColumnNames设置为false,
        	则生成的实体类的属性名为startDate,生成的setter/getter为setStartDate/getStartDate。
        	
        <table tableName="t_user" domainObjectName="User" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
        	<property name="useActualColumnNames" value="false" />  
        </table>
    -->
     <!-- 配置表名跟pojo名  该table节点可以多个
        <table tableName="test_field" domainObjectName="TestField" enableCountByExample="false" enableUpdateByExample="false"
            enableDeleteByExample="false" enableSelectByExample="false"
            selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <columnOverride column="create_time" property="createTime" />
            <columnOverride column="float_test" property="floatTest" />
            <columnOverride column="double_test" property="doubleTest" />
            <columnOverride column="text_test" property="textTest" />
        </table>
 	-->
 	
 	<!--要生成哪些表 -->  
        <table tableName="%" enableSelectByExample="false" enableDeleteByExample="false"  
                                enableCountByExample="false" enableUpdateByExample="false"  
                                selectByExampleQueryId="false">  
        </table>  
    
    
    
    </context>
</generatorConfiguration>